include: macros/write_pdf.def
include: macros/graphics.def
include: macros/font.def
include: macros/text.def
include: macros/hobby_curve.def
include: macros/tex.def
include: macros/arrow.def
include: macros/label.def

page: MyPlot
    output_dir: lib
    type: pm
    package: MyPlot
    subcode: main
	#---- expose to pdf writer --------
	$global @page_list, @font_list, @xobj_list

	#---- expose to graphic composer ----
	$global $page_width, $page_height, $page_margin

        #---- cur --------------------
        $global $page_content

	1;

#---------------------------------------- 
fncode: init
    @page_list=()
    @font_list=()
    @xobj_list=()
    $call set_page_size, letter

#---- pages ------------------------------------ 
fncode: newpage
    $global $page_fonts, %page_font_hash
    $global $page_xobjs

    my $page={width=>$page_width, height=>$page_height, content=>[], fonts=>[], xobjs=>[]}
    %page_font_hash=()
    $page_fonts=$page->{fonts}
    $page_xobjs=$page->{xobjs}
    push @page_list, $page

    $page_content=$page->{content}

    $call @on_page_init

subcode: update_page_xobjs
    push @$page_xobjs, $xobj

#---- XObjects ------------------------------
fncode: add_jpg($file, $w, $h, $bpp)
    my $n=@xobj_list
    $n++
    my $xobj={type=>"jpeg", file=>$file, Width=>$w, Height=>$h, BitsPerComponent=>$bpp, Name=>"X$n"}
    push @xobj_list, $xobj
    $call @update_page_xobjs
    return "X$n"

fncode: add_image($image)
    my $n=@xobj_list
    $n++
    my $xobj={type=>"image", image=>$image, Name=>"X$n"}
    push @xobj_list, $xobj
    $call @update_page_xobjs
    return "X$n"


#---- page dimension ------------------------------------ 
subcode: set_page_size(name)
    $global $page_width, $page_height, $page_margin
    $(if:name=letter)
	$page_width=612
	$page_height=792
	$page_margin=36
    $(elif:name=A4)
	$page_width=595
	$page_height=842
	$page_margin=36
    $(elif:name=card)
	$page_width=5*72
	$page_height=3*72
	$page_margin=0.24*72
    $(elif:name=landscape)
	$page_width=792
	$page_height=612
	$page_margin=36
    $(else)
	$page_width=612
	$page_height=792
	$page_margin=36

#---- color ------------------------------------ 
fncode: get_color_statement($name)
    $global %gray_hash=(white=>1, black=>0)
    $global %rgb_hash=(red=>"1 0 0", green=>"0 1 0", blue=>"0 0 1")

    $if defined $gray_hash{$name}
        return (0, $gray_hash{$name})
    $elif $rgb_hash{$name}
        return (1, $rgb_hash{$name})
    $elif $name=~/^(0\.\d+)$/
        return (0, $1)
    $elif $name=~/^(0\.\d+)\s+(0\.\d+)\s+(0\.\d+)$/
        return (1, "$1 $2 $3")

