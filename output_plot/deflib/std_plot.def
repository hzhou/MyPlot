include: std_perl.def

macros:
    PLOT: MyPlot

subcode: basic_frame(@outname)
    $use $(PLOT)

    &call open_pdf, "$(outname)"
        $call main2


#---------------------------------------- 
#- Common Shapes
#---------------------------------------- 

macros:
    circle: (-$1,0)..(0,-$1)..($1,0)..(0,$1)..cycle
    square: (0,0)--($1,0)--($1,$1)--(0,$1)--cycle

#----------------------------------------
#- Graphic State
#-    CTM, clippingpath, colorspace, color, textstate
#-    linewidth, linecap, linejoin, dashpattern 
#----------------------------------------

subcode: newpage
    $(PLOT)::newpage()

subcode: open_pdf(f)
    $(if:f~")
	$(set:f=$(f:strip))
    &call block
	$(PLOT)::init()
	$call newpage
	BLOCK
	$(PLOT)::write_pdf("$(f)")
	print " --> $(f)\n"

#---------------------------------------- 
subcode: rect(x, y, w, h)
    push @$page_content, join " ", $(x), $(y), $(w), $(h), "re"
    $call draw

subcode: circle(x0, y0, r)
    &call newshape
        my $c=0.551915024494*$(r)
        $call moveto, $(x0), $(y0)+$(r)
        $call curveto, $(x0)+$c, $(y0)+$(r), $(x0)+$(r), $(y0)+$c, $(x0)+$(r), $(y0)
        $call curveto, $(x0)+$(r), $(y0)-$c, $(x0)+$c, $(y0)-$(r), $(x0), $(y0)-$(r)
        $call curveto, $(x0)-$c, $(y0)-$(r), $(x0)-$(r), $(y0)-$c, $(x0)-$(r), $(y0)
        $call curveto, $(x0)-$(r), $(y0)+$c, $(x0)-$c, $(y0)+$(r), $(x0), $(y0)+$(r)
    $call draw

#---- Text ------------------------------------ 
subcode: setfont(name, size)
    $global $cur_font, $cur_font_size
    $(if:name~")
	$cur_font=$(PLOT)::find_font($(name))
    $(else)
	$cur_font=$(PLOT)::find_font("$(name)")
    $cur_font_size=$(size)
    my $name=$cur_font->{Name}
    push @$page_content, "/$name $cur_font_size Tf"

subcode: setcharspacing(tc)
    push @$page_content, "$(tc) Tc"

subcode: setwordspacing(tw)
    push @$page_content, "$(tw) Tw"

subcode: setlinespacing(tl)
    push @$page_content, "$(tl) TL"

subcode: settextmode(mode)
    #--- 0 Fill, 1 Stroke, 2 FillStroke, 3 Invisible ----
    #--- 4 Fill, 5 Stroke, 6 FillStroke, 7 None + Path
    push @$page_content, "$(mode) Tr"

subcode: settextrise(ts)
    push @$page_content, "$(ts) Ts"

# --------------------------------------- 
subcode: text_block(x, y)
    push @$page_content, "BT"
    push @$page_content, "$cur_font_size TL"
    push @$page_content, join ' ', $(x), $(y), "Td"
    BLOCK
    push @$page_content, "ET"

subcode: textshift(tx, ty)
    push @$page_content, join ' ', $(tx), $(ty), "Td"

# -------------
subcode: text(@str)
    $(if:str~")
	$(set:str=$(str:strip))
    $(if:str~utf:)
	use utf8
	my $t=$(PLOT)::encode_utf("$(str:4:strip)")
	push @$page_content, "<$t> Tj"
    $(else)
	push @$page_content, "($(str)) Tj"

subcode: textline(@str)
    $call text, $(str)
    push @$page_content, "T*"
    # push @$page_content, "0 -$cur_font_size Td"

subcode: text_at(x, y, @str)
    &call text_block, $(x), $(y)
	$call text, $(str)

subcode: text_center(x, y, @str)
    $(if:str~")
	$(set:str=$(str:strip))
    my $tw=$(PLOT)::text_width("$(str)", $cur_font, $cur_font_size)
    $call text_at, $(x)-$tw/2, $(y), $(str)

#---------------------------------------- 
subcode: jpeg_at(x, y, w, imagefile)
    $(if:imagefile~")
	$(set:imagefile=$(imagefile:strip))
    #/media/tmp/t.jpg JPEG 256x256 256x256+0+0 8-bit PseudoClass 256c 6.7KB 0.000u 0:00.000
    my $t=`identify $(imagefile)`
    $if $t=~/JPEG (\d+)x(\d+) \S+ (\d+)-bit/
	my ($iw, $ih, $bpp) = ($1, $2, $3)
	&call add_image, $iw, $ih
	    my $name = $(PLOT)::add_jpg("$(imagefile)", $iw, $ih, $bpp)

subcode: image_at(x, y, w, image)
    &call add_image, $(image)->{width}, $(image)->{height}
	my $name = $(PLOT)::add_image($(image))

# ----------------
subcode: add_image(iw, ih)
    my $w=$(w)
    my $h=$w/$(iw)*$(ih)
    my $x=$(x)
    my $y=$(y)-$h
    BLOCK
    push @$page_content, "q"
    push @$page_content, "$w 0 0 $h $x $y cm"
    push @$page_content, "/$name Do"
    push @$page_content, "Q"
